import json
import time


def pprint_events(events):
    """Pretty print of events generated by ADK runner"""
    start_time = time.time()
    for _, event in enumerate(events):
        is_final_response = event.is_final_response()
        function_calls = event.get_function_calls()
        function_responses = event.get_function_responses()
        agent_res = json.loads(
            event.content.model_dump_json(indent=2, exclude_none=True)
        )

        if is_final_response:
            print(">>> inside final response...")
            final_response = event.content.parts[0].text
            end_time = time.time()
            elapsed_time_ms = round((end_time - start_time) * 1000, 3)
            print(f"Final Response ({elapsed_time_ms} ms):\n{final_response}")
            print("-----------------------------")
        elif function_calls:
            print("+++ inside the function call...")
            for function_call in function_calls:
                print(f"function, [args]:  {function_call.name}, {function_call.args}")
        elif function_responses:
            print("--- inside the function call response...")
            # TODO(Pili): copied from walkthrough codes. Find root cause of 'pending' not found.
            # if not event.actions.pending:
            if True:
                for function_response in function_responses:
                    details = function_response.response
                    recommended_list = list(details.values())
                    print(f"Function Name: {function_response.name}")
                    result = json.dumps(recommended_list)
                    print(f"Function Results {result}")
            else:
                print(agent_res)
